from abc import ABC, abstractmethod

class ПишущаяПринадлежность(ABC):
    """
    Абстрактный базовый класс для всех пишущих принадлежностей.
    Определяет общие свойства и методы для всех пишущих инструментов.
    """
    def __init__(self, цвет, толщина_линии):
        """
        Инициализация пишущей принадлежности.

        :param цвет: Цвет пишущего инструмента.
        :param толщина_линии: Толщина линии, которую оставляет инструмент.
        """
        self.цвет = цвет
        self.толщина_линии = толщина_линии

    @abstractmethod
    def писать(self):
        """
        Абстрактный метод, который должен быть реализован в подклассах.
        Определяет, как пишущая принадлежность будет "писать".
        """
        pass

class Карандаш(ПишущаяПринадлежность):
    """
    Класс, представляющий карандаш. Наследует от ПишущаяПринадлежность.
    """
    def __init__(self, цвет, толщина_линии, твердость_грифеля):
        """
        Инициализация карандаша.

        :param цвет: Цвет карандаша.
        :param толщина_линии: Толщина линии, которую оставляет карандаш.
        :param твердость_грифеля: Твердость грифеля карандаша (например, HB, 2B).
        """
        super().__init__(цвет, толщина_линии)
        self.твердость_грифеля = твердость_грифеля

    def писать(self):
        """
        Реализация метода писать для карандаша.
        Выводит информацию о цвете, толщине линии и твердости грифеля.
        """
        print(f"Карандаш пишет цветом: {self.цвет}, толщина линии: {self.толщина_линии}, твёрдость грифеля: {self.твердость_грифеля}")

class Ручка(ПишущаяПринадлежность):
    """
    Класс, представляющий ручку. Наследует от ПишущаяПринадлежность.
    """
    def __init__(self, цвет, толщина_линии, тип_ручки):
        """
        Инициализация ручки.

        :param цвет: Цвет ручки.
        :param толщина_линии: Толщина линии, которую оставляет ручка.
        :param тип_ручки: Тип ручки (например, шариковая, гелевая).
        """
        super().__init__(цвет, толщина_линии)
        self.тип_ручки = тип_ручки

    def писать(self):
        """
        Реализация метода писать для ручки.
        Выводит информацию о цвете, толщине линии и типе ручки.
        """
        print(f"Ручка пишет цветом: {self.цвет}, толщина линии: {self.толщина_линии}, тип ручки: {self.тип_ручки}.")

class ГелеваяРучка(Ручка):
    """
    Класс, представляющий гелевую ручку. Наследует от Ручка.
    """
    def __init__(self, цвет, толщина_линии, тип_ручки, материал_корпуса):
        """
        Инициализация гелевой ручки.

        :param цвет: Цвет гелевой ручки.
        :param толщина_линии: Толщина линии, которую оставляет гелевая ручка.
        :param тип_ручки: Тип ручки (например, гелевая).
        :param материал_корпуса: Материал корпуса ручки (например, алюминий, пластик).
        """
        super().__init__(цвет, толщина_линии, тип_ручки)
        self.материал_корпуса = материал_корпуса

    def писать(self):
        """
        Реализация метода писать для гелевой ручки.
        Выводит информацию о типе ручки, цвете, толщине линии и материале корпуса.
        """
        print(f"Тип ручки: Гелевая, ручка пишет цветом: {self.цвет}, толщина линии: {self.толщина_линии}, материал корпуса: {self.материал_корпуса}.")